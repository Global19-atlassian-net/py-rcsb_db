# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
# -----------------
#
[tox]
envlist = py{37}-{linux,macos}, flake8, coverage-macos
#envlist = py{37,36,27}-{linux,macos}, flake8, coverage-macos

#
skip_missing_interpreters = True
#
# The mmcif module dependency requires a source build for its extension.
#
skip_install = False
skipsdist = False

[testenv]
platform=
       macos: darwin
       linux: linux

basepython =
    py27: python2.7
    py36: python3.6
    py37: python3.7

whitelist_externals = echo

recreate = True

# The python Postgres driver requires some pre-existing context that is
# avoiding in this test harness.
#
deps =  macos: crate>=0.21.1
        #macos: psycopg2>=2.7.4
        #macos: psycopg2-binary>=2.7.4
        macos: mysqlclient>=1.3.12
        macos: pymongo>=3.7.0

commands =
  {envpython} -V
  pip uninstall mmcif -qy
  pip install mmcif  --no-cache-dir
  {envpython} setup.py  sdist
  linux,macos: {envpython} -m unittest discover  --start-directory rcsb_db/tests/ --pattern "*Tests.py"
  macos: {envpython} -m unittest discover rcsb_db/tests-mysql --start-directory rcsb_db/tests-mysql/ --pattern "*Tests.py"
  macos: {envpython} -m unittest discover rcsb_db/tests-mongo --start-directory rcsb_db/tests-mongo/ --pattern "*Tests.py"


[testenv:flake8]
basepython = python3.6
skip_install = true
deps =
    flake8
    flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
commands =
    #flake8 --max-line-length=240 --ignore=D2,D4,E112,E113,E26 --exclude=rcsb_db/schema/ rcsb_db/ setup.py
    flake8 --max-line-length=240 --ignore=D,E112,E113,E114,E26,E402 --exclude=rcsb_db/schema/ rcsb_db/ setup.py

#
# PyLine is working but is not completely configured.
#
[testenv:pylint]
basepython = python3.6
skip_install = true
deps =
    pyflakes
    pylint
commands =
    pylint --rcfile=.pylintrc --ignore=rcsb_db/schema/ rcsb_db/ setup.py
#

[testenv:coverage-macos]
basepython = python3.6
platform=macos: darwin
#skip_install = true

deps =  macos: crate>=0.21.1
        #macos: psycopg2>=2.7.4
        #macos: psycopg2-binary>=2.7.4
        macos: mysqlclient>=1.3.12
        macos: pymongo>=3.7.0
        coverage

commands =
    echo "Evaluating coverage (macos)"
    pip uninstall mmcif -qy
    pip install mmcif  --no-cache-dir
    {envpython} setup.py  sdist
    coverage erase
    coverage run --parallel-mode --omit="rcsb_db/tests-*","rcsb_db/crate/*","rcsb_db/cockroach/*","rcsb_db/schema/*" --source rcsb_db/ -m unittest discover  --start-directory rcsb_db/tests/ --pattern "*Tests.py"
    coverage run  --parallel-mode --omit="rcsb_db/crate/*","rcsb_db/cockroach/*","rcsb_db/schema/*" --source rcsb_db/ -m unittest discover  --start-directory rcsb_db/tests-mongo/ --pattern "*Tests.py"
    coverage run  --parallel-mode --omit="rcsb_db/crate/*","rcsb_db/cockroach/*","rcsb_db/schema/*" --source rcsb_db/ -m unittest discover  --start-directory rcsb_db/tests-mysql/ --pattern "*Tests.py"
    coverage combine
    #
    coverage report --omit="rcsb_db/crate/*","rcsb_db/cockroach/*","rcsb_db/schema/*","rcsb_db/tests*","rcsb_db/exec/*",   --show-missing --fail-under=50
    - coverage html
    echo "Done with coverage (macos)"

#